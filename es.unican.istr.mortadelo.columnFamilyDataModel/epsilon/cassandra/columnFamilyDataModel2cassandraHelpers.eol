operation Column getType() : String {
  if (self.type.isTypeOf(SimpleType)) {
    var primitiveType = self.type.type;
    if (primitiveType.name == "FLOAT") {
      return "NUMERIC";
    } else if (primitiveType.name == "ID") {
      return "UUID";
    } else {
      return primitiveType.name;
    }
  }
}

operation ColumnFamily getPartitionKeys() : String {
  var partitionKeys = self.keys.select(k | k.isTypeOf(PartitionKey))
                               .sortBy(k | k.position)
                               .collect(k | k.column.name);
  var res = partitionKeys.concat(", ");
  // parenthesis surrounding partition keys only if clustering keys present
  if (not self.keys.select(k | k.isTypeOf(ClusteringKey)).isEmpty()) {
    res = "(" + res + ")";
  }
  return res;
}

operation ColumnFamily getClusteringKeys() : String {
  var clusteringKeys = self.keys.select(k | k.isTypeOf(ClusteringKey))
                                .sortBy(k | k.position)
                                .collect(k | k.column.name);
  if (clusteringKeys.isEmpty()) {
    return "";
  } else {
    return ", " + clusteringKeys.concat(", ");
  }
}